<?xml version="1.0" ?><resources>
    <string name="UI_SCROLLING_app_name">Scrolling Example</string>
    <string name="UI_SCROLLING_large_text">
        &quot;Material is the metaphor.\n\n&quot;

        &quot;A material metaphor is the unifying theory of a rationalized space and a system of motion.&quot;
        &quot;The material is grounded in tactile reality, inspired by the study of paper and ink, yet &quot;
        &quot;technologically advanced and open to imagination and magic.\n&quot;
        &quot;Surfaces and edges of the material provide visual cues that are grounded in reality. The &quot;
        &quot;use of familiar tactile attributes helps users quickly understand affordances. Yet the &quot;
        &quot;flexibility of the material creates new affordances that supercede those in the physical &quot;
        &quot;world, without breaking the rules of physics.\n&quot;
        &quot;The fundamentals of light, surface, and movement are key to conveying how objects move, &quot;
        &quot;interact, and exist in space and in relation to each other. Realistic lighting shows &quot;
        &quot;seams, divides space, and indicates moving parts.\n\n&quot;

        &quot;Bold, graphic, intentional.\n\n&quot;

        &quot;The foundational elements of print based design typography, grids, space, scale, color, &quot;
        &quot;and use of imagery guide visual treatments. These elements do far more than please the &quot;
        &quot;eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge &quot;
        &quot;imagery, large scale typography, and intentional white space create a bold and graphic &quot;
        &quot;interface that immerse the user in the experience.\n&quot;
        &quot;An emphasis on user actions makes core functionality immediately apparent and provides &quot;
        &quot;waypoints for the user.\n\n&quot;

        &quot;Motion provides meaning.\n\n&quot;

        &quot;Motion respects and reinforces the user as the prime mover. Primary user actions are &quot;
        &quot;inflection points that initiate motion, transforming the whole design.\n&quot;
        &quot;All action takes place in a single environment. Objects are presented to the user without &quot;
        &quot;breaking the continuity of experience even as they transform and reorganize.\n&quot;
        &quot;Motion is meaningful and appropriate, serving to focus attention and maintain continuity. &quot;
        &quot;Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n&quot;

        &quot;3D world.\n\n&quot;

        &quot;The material environment is a 3D space, which means all objects have x, y, and z &quot;
        &quot;dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the &quot;
        &quot;positive z-axis extending towards the viewer. Every sheet of material occupies a single &quot;
        &quot;position along the z-axis and has a standard 1dp thickness.\n&quot;
        &quot;On the web, the z-axis is used for layering and not for perspective. The 3D world is &quot;
        &quot;emulated by manipulating the y-axis.\n\n&quot;

        &quot;Light and shadow.\n\n&quot;

        &quot;Within the material environment, virtual lights illuminate the scene. Key lights create &quot;
        &quot;directional shadows, while ambient light creates soft shadows from all angles.\n&quot;
        &quot;Shadows in the material environment are cast by these two light sources. In Android &quot;
        &quot;development, shadows occur when light sources are blocked by sheets of material at &quot;
        &quot;various positions along the z-axis. On the web, shadows are depicted by manipulating the &quot;
        &quot;y-axis only. The following example shows the card with a height of 6dp.\n\n&quot;

        &quot;Resting elevation.\n\n&quot;

        &quot;All material objects, regardless of size, have a resting elevation, or default elevation &quot;
        &quot;that does not change. If an object changes elevation, it should return to its resting &quot;
        &quot;elevation as soon as possible.\n\n&quot;

        &quot;Component elevations.\n\n&quot;

        &quot;The resting elevation for a component type is consistent across apps (e.g., FAB elevation &quot;
        &quot;does not vary from 6dp in one app to 16dp in another app).\n&quot;
        &quot;Components may have different resting elevations across platforms, depending on the depth &quot;
        &quot;of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n&quot;

        &quot;Responsive elevation and dynamic elevation offsets.\n\n&quot;

        &quot;Some component types have responsive elevation, meaning they change elevation in response &quot;
        &quot;to user input (e.g., normal, focused, and pressed) or system events. These elevation &quot;
        &quot;changes are consistently implemented using dynamic elevation offsets.\n&quot;
        &quot;Dynamic elevation offsets are the goal elevation that a component moves towards, relative &quot;
        &quot;to the component’s resting state. They ensure that elevation changes are consistent &quot;
        &quot;across actions and component types. For example, all components that lift on press have &quot;
        &quot;the same elevation change relative to their resting elevation.\n&quot;
        &quot;Once the input event is completed or cancelled, the component will return to its resting &quot;
        &quot;elevation.\n\n&quot;

        &quot;Avoiding elevation interference.\n\n&quot;

        &quot;Components with responsive elevations may encounter other components as they move between &quot;
        &quot;their resting elevations and dynamic elevation offsets. Because material cannot pass &quot;
        &quot;through other material, components avoid interfering with one another any number of ways, &quot;
        &quot;whether on a per component basis or using the entire app layout.\n&quot;
        &quot;On a component level, components can move or be removed before they cause interference. &quot;
        &quot;For example, a floating action button (FAB) can disappear or move off screen before a &quot;
        &quot;user picks up a card, or it can move if a snackbar appears.\n&quot;
        &quot;On the layout level, design your app layout to minimize opportunities for interference. &quot;
        &quot;For example, position the FAB to one side of stream of a cards so the FAB won’t interfere &quot;
        &quot;when a user tries to pick up one of cards.\n\n&quot;
    </string>
    <string name="UI_SCROLLING_action_settings">Settings</string>
</resources>